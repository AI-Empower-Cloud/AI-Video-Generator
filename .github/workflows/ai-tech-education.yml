name: 🤖 AI Technology Education Platform CI/CD

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black
    
    - name: Code formatting check
      run: |
        black --check --diff ai_tech_education_app.py universal_education_app.py
    
    - name: Lint with flake8
      run: |
        flake8 ai_tech_education_app.py universal_education_app.py --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 ai_tech_education_app.py universal_education_app.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test AI Tech Education App
      run: |
        python -c "
        import sys
        sys.path.append('.')
        try:
            from ai_tech_education_app import AI_TECH_SUBJECTS, generate_ai_tech_script
            print('✅ AI Tech Education App imports successfully')
            
            # Test script generation
            script = generate_ai_tech_script('AI for Middle School', 'What is Artificial Intelligence?', '7th Grade', 15)
            assert len(script) > 100, 'Script should be substantial'
            print('✅ Script generation works')
            
            # Test all subjects have required fields
            for subject, config in AI_TECH_SUBJECTS.items():
                assert 'topics' in config, f'{subject} missing topics'
                assert 'levels' in config, f'{subject} missing levels'
                assert 'duration_range' in config, f'{subject} missing duration_range'
                assert len(config['topics']) > 0, f'{subject} has no topics'
            print('✅ All subjects properly configured')
            
            print('🎉 All AI Technology Education tests passed!')
        except Exception as e:
            print(f'❌ Test failed: {e}')
            sys.exit(1)
        "

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t ai-tech-education:latest .
        docker run --rm ai-tech-education:latest python -c "import streamlit; print('✅ Streamlit installed')"

  deploy-docs:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Pages
      uses: actions/configure-pages@v3
    
    - name: Generate documentation
      run: |
        mkdir -p docs
        cp README_UNIVERSAL.md docs/index.md
        cp AI_TECH_EDUCATION_GUIDE.md docs/
        cp COMPLETE_SUBJECT_INDEX.md docs/
        cp web-service-setup.md docs/
        
        # Create navigation
        cat > docs/_config.yml << EOF
        title: "AI Educational Video Generator"
        description: "Universal platform for creating educational videos across all subjects"
        theme: minima
        plugins:
          - jekyll-feed
        
        header_pages:
          - index.md
          - AI_TECH_EDUCATION_GUIDE.md
          - COMPLETE_SUBJECT_INDEX.md
          - web-service-setup.md
        EOF
    
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: docs
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  release:
    needs: [test, build-docker]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: AI Technology Education Platform ${{ github.ref }}
        body: |
          ## 🤖 AI Technology Education Platform Release
          
          ### 🎯 New Features
          - Enhanced AI and computer technology education for middle schools, high schools, and professionals
          - Specialized content for different age groups and skill levels
          - Professional development tools for business AI adoption
          - Comprehensive curriculum covering AI, programming, data science, and digital literacy
          
          ### 🏫 Educational Institutions
          - **Middle School**: Age-appropriate AI concepts and digital literacy
          - **High School**: Advanced computer science and AI programming
          - **Professional**: Business AI tools and implementation strategies
          
          ### 🚀 Platform Features
          - Professional HD video generation (10-40 minutes)
          - Automatic YouTube upload with SEO optimization
          - Multi-language support (50+ languages)
          - Interactive elements and code examples
          - Real-world applications and career guidance
          
          ### 📚 Documentation
          - Complete subject index covering all educational fields
          - Specialized AI & Technology Education Guide
          - Web service deployment instructions
          - Educator examples and success stories
          
          Perfect for educators, students, and professionals looking to master AI and technology skills!
        draft: false
        prerelease: false
