name: 🚀 Release & Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: 📦 Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🏷️ Get tag version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: 📝 Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: AI Video Generator ${{ steps.get_version.outputs.VERSION }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false

  deploy-ready:
    name: 🎯 Deployment Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: 📦 Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: ✅ Verify platform integrity
      run: |
        python -c "
        import os
        print('🔍 Checking essential files...')
        
        essential_files = [
            'app.py', 'config.py', 'requirements.txt',
            'local_tts_engine.py', 'advanced_local_tts.py',
            'abc_video_generator.py', 'universal_song_generator.py',
            'deploy_to_wasabi.py', 'integrate_with_empowerhub360.sh'
        ]
        
        missing = [f for f in essential_files if not os.path.exists(f)]
        
        if missing:
            print(f'❌ Missing files: {missing}')
            exit(1)
        else:
            print('✅ All essential files present')
            
        # Check content directories
        content_dirs = ['audio_output', 'video_output', 'podcast_output', 'interview_output']
        for dir_name in content_dirs:
            if os.path.exists(dir_name):
                file_count = len([f for f in os.listdir(dir_name) if os.path.isfile(os.path.join(dir_name, f))])
                print(f'📁 {dir_name}: {file_count} files')
            else:
                print(f'⚠️  {dir_name}: directory not found')
                
        print('🎉 Platform verification complete!')
        "
